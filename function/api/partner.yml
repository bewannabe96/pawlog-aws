listPartners:
  handler: src/lambda/partners/listPartners.handler
  events:
    - http:
        path: partners
        method: get
        cors: true

createPartner:
  handler: src/lambda/partners/createPartner.handler
  events:
    - http:
        path: partners
        method: post
        authorizer: customAuthorizer
        cors: true

getPartnerDetail:
  handler: src/lambda/partners/getPartnerDetail.handler
  events:
    - http:
        path: partners/{partnerID}
        method: get
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

updatePartnerDetail:
  handler: src/lambda/partners/updatePartnerDetail.handler
  events:
    - http:
        path: partners/{partnerID}
        method: put
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

deletePartner:
  handler: src/lambda/partners/deletePartner.handler
  events:
    - http:
        path: partners/{partnerID}
        method: delete
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

getPartnerImages:
  handler: src/lambda/partners/getPartnerImages.handler
  events:
    - http:
        path: partners/{partnerID}/images
        method: get
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

updatePartnerImages:
  handler: src/lambda/partners/updatePartnerImages.handler
  events:
    - http:
        path: partners/{partnerID}/images
        method: put
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

uploadPartnerImage:
  handler: src/lambda/partners/uploadPartnerImage.handler
  events:
    - http:
        path: partners/{partnerID}/images/{uid}
        method: post
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true
              uid: true

deletePartnerImage:
  handler: src/lambda/partners/deletePartnerImage.handler
  events:
    - http:
        path: partners/{partnerID}/images/{uid}
        method: delete
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true
              uid: true

getPartnerReviews:
  handler: src/lambda/partners/getPartnerReviews.handler
  events:
    - http:
        path: partners/{partnerID}/reviews
        method: get
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

createPartnerReview:
  handler: src/lambda/partners/createPartnerReview.handler
  events:
    - http:
        path: partners/{partnerID}/reviews
        method: post
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true

deletePartnerReview:
  handler: src/lambda/partners/deletePartnerReview.handler
  events:
    - http:
        path: partners/{partnerID}/reviews/{reviewID}
        method: delete
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true
              reviewID: true

uploadReviewImage:
  handler: src/lambda/partners/uploadReviewImage.handler
  events:
    - http:
        path: partners/{partnerID}/reviews/{reviewID}/images/{uid}
        method: post
        authorizer: customAuthorizer
        cors: true
        request:
          parameters:
            paths:
              partnerID: true
              reviewID: true
              uid: true

getPartnerGoogleReviews:
  handler: src/lambda/partners/getPartnerGoogleReviews.handler
  events:
    - http:
        path: partners/{partnerID}/googleReviews
        method: get
        cors: true
        request:
          parameters:
            paths:
              partnerID: true
