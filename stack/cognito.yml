cognito:
  Resources:
    CognitoUserPoolPawlog:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: PawlogUserPool
        AccountRecoverySetting:
          RecoveryMechanisms:
            - Name: verified_email
              Priority: 2
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Schema:
          - Name: email
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: family_name
            AttributeDataType: String
            Mutable: true
            Required: true
          - Name: given_name
            AttributeDataType: String
            Mutable: true
            Required: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: True
            RequireNumbers: True
            RequireSymbols: False
            RequireUppercase: True
        VerificationMessageTemplate:
          DefaultEmailOption: CONFIRM_WITH_LINK
          EmailSubjectByLink: 'Pawlog Email Confirmation'
          EmailMessageByLink: 'Please complete your register: {##link##}'

    PawlogUserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      Properties:
        Domain: pawlog
        UserPoolId: !Ref CognitoUserPoolPawlog

    PawlogUserPoolGoogleIDP:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        ProviderName: Google
        ProviderType: Google
        AttributeMapping:
          email: email
          name: name
          family_name: family_name
          given_name: given_name
          picture: picture
        ProviderDetails:
          client_id: 339366390860-o8lcvjns5middco4tegafmdeia60t6nc.apps.googleusercontent.com
          client_secret: lxku7tA9Ma-cZM1Iq7slFuxs
          authorize_scopes: email profile
        UserPoolId: !Ref CognitoUserPoolPawlog

    PawlogUserPoolFacebookIDP:
      Type: AWS::Cognito::UserPoolIdentityProvider
      Properties:
        ProviderName: Facebook
        ProviderType: Facebook
        AttributeMapping:
          email: email
          name: name
          family_name: last_name
          given_name: first_name
          picture: picture
        ProviderDetails:
          client_id: '211743693267367'
          client_secret: 601671abba8d9b13646876cfebbed47e
          authorize_scopes: public_profile email
        UserPoolId: !Ref CognitoUserPoolPawlog

    PawlogWebClient:
      Type: AWS::Cognito::UserPoolClient
      DependsOn:
        - PawlogUserPoolGoogleIDP
        - PawlogUserPoolFacebookIDP
      Properties:
        ClientName: PawlogWebClient
        UserPoolId: !Ref CognitoUserPoolPawlog
        CallbackURLs:
          - https://www.pawloghk.com
        LogoutURLs:
          - https://www.pawloghk.com
        AllowedOAuthFlows:
          - implicit
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthScopes:
          - email
          - openid
          - profile
          - aws.cognito.signin.user.admin
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        GenerateSecret: False
        PreventUserExistenceErrors: ENABLED
        SupportedIdentityProviders:
          - COGNITO
          - Google
          - Facebook

    PawlogIdentityPool:
      Type: AWS::Cognito::IdentityPool
      Properties:
        IdentityPoolName: PawlogIdentityPool
        AllowUnauthenticatedIdentities: false
        CognitoIdentityProviders:
          - ClientId:
              Ref: PawlogWebClient
            ProviderName: !GetAtt CognitoUserPoolPawlog.ProviderName

    AuthorizedUserIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: AuthorizedUserIAMRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Federated: cognito-identity.amazonaws.com
              Action:
                - sts:AssumeRoleWithWebIdentity
              Condition:
                StringEquals:
                  cognito-identity.amazonaws.com:aud: !Ref PawlogIdentityPool
                ForAnyValue:StringLike:
                  cognito-identity.amazonaws.com:amr: authenticated
        Policies:
          - PolicyName: CognitoAuthorizedPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - mobileanalytics:PutEvents
                    - cognito-sync:*
                    - cognito-identity:*
                  Resource: '*'

    NonAuthorizedUserIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: NonAuthorizedUserIAMRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Federated: cognito-identity.amazonaws.com
              Action:
                - sts:AssumeRoleWithWebIdentity
              Condition:
                StringEquals:
                  cognito-identity.amazonaws.com:aud: !Ref PawlogIdentityPool
                ForAnyValue:StringLike:
                  cognito-identity.amazonaws.com:amr: unauthenticated
        Policies:
          - PolicyName: CognitoUnauthorizedPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - mobileanalytics:PutEvents
                    - cognito-sync:*
                  Resource: '*'

    IdentityPoolRoleAttachment:
      Type: AWS::Cognito::IdentityPoolRoleAttachment
      Properties:
        IdentityPoolId:
          Ref: PawlogIdentityPool
        Roles:
          authenticated: !GetAtt AuthorizedUserIAMRole.Arn
          unauthenticated: !GetAtt NonAuthorizedUserIAMRole.Arn

  Outputs:
    PawlogUserPoolProviderURL:
      Value: !GetAtt CognitoUserPoolPawlog.ProviderURL
      Export:
        Name: PawlogUserPoolProviderURL
